/*

继承,许多OO语言支持接口继承,和实现继承
接口继承只是继承方法签名,实现继承则继承实际的方法
函数没有签名,只有实现继承,主要原理是原型链

原型链
每个构造函数都有原型对象,原型对象都包含一个指向构造函数的指针,实例都包含一个指向原型的内部指针,如果使原型对象等于
另一个类型的实例,形成一个原型的链条.

*/

function SuperType(){
	this.property=true;
}

SuperType.prototype.getSuperValue=function(){
	return this.prototype;
};

function SubType(){
	this.subproperty=false;
}

//继承SuperType
SubType.prototype=new SuperType();

SuperType.prototype.getSubValue=function(){
	return this.subproperty;
};

var instance=new SubType();
alert(instance.getSuperValue());//true